datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Capsule   Capsule[]

  @@map("users")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Capsule {
  id              String        @id @default(cuid())
  content         String
  status          CapsuleStatus @default(PENDING)
  scheduledTo     DateTime
  recipientEmails String[] //if recepient email is not varified for same user make sure the scheduled delay is more then 1 month to ensure service is not used wrongfully
  author          User          @relation(fields: [authorId], references: [id])
  authorId        String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("capsules")
}

enum CapsuleStatus {
  SENT
  QUEUED
  PENDING
  FAILED
}
