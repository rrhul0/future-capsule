name: Deploy App

on:
  push:
    branches:
      - main
      - '**' # All branches for preview deployment

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: future-capsule

# concurrency:
#   group: preview
#   cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    environment: preview
    concurrency: preview
    permissions:
      contents: read
      packages: write
      id-token: write # Important for at least docker gha cache

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Set up Docker cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-arm64-${{ github.sha }}
          restore-keys: |
            docker-arm64-

      - name: Build and Push Docker Image
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          IMAGE_TAG=$([[ "$BRANCH_NAME" == "main" ]] && echo "latest" || echo "$BRANCH_NAME")

          NEXT_PUBLIC_APP_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz" || echo "https://${BRANCH_NAME}.tt.clammy.xyz")
          AUTH_URL=$NEXT_PUBLIC_APP_URL/auth



          docker buildx create --name mybuilder --driver docker-container --use
          docker buildx inspect mybuilder --bootstrap

          docker buildx build --builder mybuilder --load \
          --build-arg DATABASE_URL=${{ secrets.DATABASE_URL_BUILD }} \
          --build-arg REDIS_URL=${{ vars.REDIS_URL_BUILD }} \
          --build-arg AUTH_SECRET=${{ secrets.AUTH_SECRET }} \
          --build-arg TZ=${{ vars.TZ }} \
          --build-arg GITHUB_ID=${{ vars.GH_ID }} \
          --build-arg GITHUB_SECRET=${{ secrets.GH_SECRET }} \
          --build-arg GOOGLE_ID=${{ vars.GOOGLE_ID }} \
          --build-arg GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET }} \
          --build-arg GITLAB_ID=${{ vars.GITLAB_ID }} \
          --build-arg GITLAB_SECRET=${{ secrets.GITLAB_SECRET }} \
          --build-arg AUTH_URL=$AUTH_URL \
          --build-arg NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL \
          --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }} \
          --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }} \
          --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }} \
          --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }} \
          --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }} \
          --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID }} \
          --build-arg BREVO_USER=${{ secrets.BREVO_USER }} \
          --build-arg BREVO_PASS=${{ secrets.BREVO_PASS }} \
          -t $REGISTRY/$GITHUB_ACTOR/$IMAGE_NAME:$IMAGE_TAG --file Dockerfile . \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache

          docker push $REGISTRY/$GITHUB_ACTOR/$IMAGE_NAME:$IMAGE_TAG

  deploy:
    needs: build
    environment: preview
    concurrency: preview
    permissions:
      contents: read
      packages: read
    runs-on: self-hosted

    steps:
      - name: Login to GitHub Container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up environment variables and deploy the docker image
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          IMAGE_TAG=$([[ "$BRANCH_NAME" == "main" ]] && echo "latest" || echo "$BRANCH_NAME")

          AUTH_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz/auth" || echo "https://${BRANCH_NAME}.tt.clammy.xyz/auth")
          NEXT_PUBLIC_APP_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz" || echo "https://${BRANCH_NAME}.tt.clammy.xyz")

          COMPOSE_FILE=$([[ "$BRANCH_NAME" == "main" ]] && echo "docker-compose.production.yml" || echo "docker-compose.preview.yml")

          docker pull $REGISTRY/$GITHUB_ACTOR/$IMAGE_NAME:$BRANCH_NAME

          if [ "$(docker ps -q -f name=future-capsule-$BRANCH_NAME)" ]; then
            docker compose -f $HOME/future-capsule/$COMPOSE_FILE down
          fi

          DATABASE_URL=${{ secrets.DATABASE_URL}} \
          REDIS_URL=${{ vars.REDIS_URL }} \
          AUTH_SECRET=${{ secrets.AUTH_SECRET }} \
          TZ=${{ vars.TZ }} GITHUB_ID=${{ vars.GH_ID}} \
          GOOGLE_ID=${{ vars.GOOGLE_ID}} \
          GITLAB_ID=${{ vars.GITLAB_ID}} \
          GITHUB_SECRET=${{ secrets.GH_SECRET}} \
          GOOGLE_SECRET=${{ secrets.GOOGLE_SECRET}} \
          GITLAB_SECRET=${{ secrets.GITLAB_SECRET}} \
          AUTH_URL=$AUTH_URL \
          NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL \
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY}} \
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}} \
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID}} \
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}} \
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}} \
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ vars.NEXT_PUBLIC_FIREBASE_APP_ID}} \
          BREVO_USER=${{ secrets.BREVO_USER}} \
          BREVO_PASS=${{ secrets.BREVO_PASS}} \
          BRANCH_NAME=$BRANCH_NAME \
          docker compose -f $HOME/future-capsule/$COMPOSE_FILE up -d
