name: Deploy App

on:
  push:
    branches:
      - main
      - '**' # All branches for preview deployment

jobs:
  build:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: create database url
        run: |
          DATABASE_BUILD_PORT=$([[ "$BRANCH_NAME" == "main" ]] && echo "5432" || echo "6432")
          echo "DATABASE_URL_BUILD=postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@new-mumbai:$DATABASE_BUILD_PORT/future-capsule" >> $GITHUB_ENV

      - name: Set up environment variables
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          IMAGE_TAG=$([[ "$BRANCH_NAME" == "main" ]] && echo "latest" || echo "$BRANCH_NAME")

          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          DATABASE_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.DATABASE_URL_PROD }} || echo ${{ secrets.DATABASE_URL_PREVIEW }})
          REDIS_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.REDIS_URL_PROD }} || echo ${{ vars.REDIS_URL_PREVIEW }})
          AUTH_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.AUTH_SECRET_PROD }} || echo ${{ secrets.AUTH_SECRET_PREVIEW }})
          GH_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.GH_ID_PROD }} || echo ${{ vars.GH_ID_PREVIEW }})
          GOOGLE_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.GOOGLE_ID_PROD }} || echo ${{ vars.GOOGLE_ID_PREVIEW }})
          GITLAB_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.GITLAB_ID_PROD }} || echo ${{ vars.GITLAB_ID_PREVIEW }})
          GH_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.GH_SECRET_PROD }} || echo ${{ secrets.GH_SECRET_PREVIEW }})
          GOOGLE_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.GOOGLE_SECRET_PROD }} || echo ${{ secrets.GOOGLE_SECRET_PREVIEW }})
          GITLAB_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.GITLAB_SECRET_PROD }} || echo ${{ secrets.GITLAB_SECRET_PREVIEW }})
          AUTH_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz/auth" || echo "https://${BRANCH_NAME}.tt.clammy.xyz/auth")
          NEXT_PUBLIC_APP_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz" || echo "https://${BRANCH_NAME}.tt.clammy.xyz")
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ vars.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ vars.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.FIREBASE_APP_ID_PROD }} || echo ${{ env.FIREBASE_APP_ID_PREVIEW }})
          BREVO_USER=${{ secrets.BREVO_USER }}
          BREVO_PASS=${{ secrets.BREVO_PASS }}

          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
          echo "AUTH_SECRET=$AUTH_SECRET" >> $GITHUB_ENV
          echo "GH_ID=$GH_ID" >> $GITHUB_ENV
          echo "GOOGLE_ID=$GOOGLE_ID" >> $GITHUB_ENV
          echo "GITLAB_ID=$GITLAB_ID" >> $GITHUB_ENV
          echo "GH_SECRET=$GH_SECRET" >> $GITHUB_ENV
          echo "GOOGLE_SECRET=$GOOGLE_SECRET" >> $GITHUB_ENV
          echo "GITLAB_SECRET=$GITLAB_SECRET" >> $GITHUB_ENV
          echo "AUTH_URL=$AUTH_URL" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=$NEXT_PUBLIC_FIREBASE_API_KEY" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID" >> $GITHUB_ENV
          echo "BREVO_USER=$BREVO_USER" >> $GITHUB_ENV
          echo "BREVO_PASS=$BREVO_PASS" >> $GITHUB_ENV

          DATABASE_BUILD_PORT=$([[ "$BRANCH_NAME" == "main" ]] && echo "5432" || echo "6432")
          echo "DATABASE_URL_BUILD=postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@new-mumbai:$DATABASE_BUILD_PORT/future-capsule" >> $GITHUB_ENV

          echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
          echo "GITHUB_ACTOR=$GITHUB_ACTOR" >> $GITHUB_ENV
          echo "IMAGE_NAME=future-capsule" >> $GITHUB_ENV

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      #   with:
      #     platforms: linux/arm64

      - name: Build and Push Docker Image
        # uses: docker/build-push-action@v6
        run: |
          docker build --build-arg \
          DATABASE_URL=${{ env.DATABASE_URL_BUILD }} \
          REDIS_URL=${{ env.REDIS_URL }} \
          AUTH_SECRET=${{ env.AUTH_SECRET }} \
          TZ=${{ vars.TZ }} \
          GITHUB_ID=${{ env.GH_ID }} \
          GITHUB_SECRET=${{ env.GH_SECRET }} \
          GOOGLE_ID=${{ env.GOOGLE_ID }} \
          GOOGLE_SECRET=${{ env.GOOGLE_SECRET }} \
          GITLAB_ID=${{ env.GITLAB_ID }} \
          GITLAB_SECRET=${{ env.GITLAB_SECRET }} \
          AUTH_URL=${{ env.AUTH_URL }} \
          NEXT_PUBLIC_APP_URL=${{ env.NEXT_PUBLIC_APP_URL }} \
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ env.NEXT_PUBLIC_FIREBASE_API_KEY }} \
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }} \
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ env.NEXT_PUBLIC_FIREBASE_PROJECT_ID }} \
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }} \
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }} \
          NEXT_PUBLIC_FIREBASE_APP_ID=${{ env.NEXT_PUBLIC_FIREBASE_APP_ID }} \
          BREVO_USER=${{ env.BREVO_USER }} \
          BREVO_PASS=${{ env.BREVO_PASS }} \
          -t ${{ env.REGISTRY}}/${{ env.GITHUB_ACTOR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

          docker push ${{ env.REGISTRY}}/${{ env.GITHUB_ACTOR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build
    permissions:
      contents: read
      packages: read
    runs-on: self-hosted

    steps:
      - name: Login to GitHub Container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up environment variables and deploy the docker image
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          IMAGE_TAG=$([[ "$BRANCH_NAME" == "main" ]] && echo "latest" || echo "$BRANCH_NAME")

          DATABASE_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.DATABASE_URL_PROD }} || echo ${{ secrets.DATABASE_URL_PREVIEW }})
          REDIS_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.REDIS_URL_PROD }} || echo ${{ vars.REDIS_URL_PREVIEW }})
          AUTH_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.AUTH_SECRET_PROD }} || echo ${{ secrets.AUTH_SECRET_PREVIEW }})
          TZ=${{ vars.TZ }}
          GH_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.GH_ID_PROD }} || echo ${{ vars.GH_ID_PREVIEW }})
          GOOGLE_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.GOOGLE_ID_PROD }} || echo ${{ vars.GOOGLE_ID_PREVIEW }})
          GITLAB_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.GITLAB_ID_PROD }} || echo ${{ vars.GITLAB_ID_PREVIEW }})
          GH_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.GH_SECRET_PROD }} || echo ${{ secrets.GH_SECRET_PREVIEW }})
          GOOGLE_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.GOOGLE_SECRET_PROD }} || echo ${{ secrets.GOOGLE_SECRET_PREVIEW }})
          GITLAB_SECRET=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ secrets.GITLAB_SECRET_PROD }} || echo ${{ secrets.GITLAB_SECRET_PREVIEW }})
          AUTH_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz/auth" || echo "https://${BRANCH_NAME}.tt.clammy.xyz/auth")
          NEXT_PUBLIC_APP_URL=$([[ "$BRANCH_NAME" == "main" ]] && echo "https://prod.tt.clammy.xyz" || echo "https://${BRANCH_NAME}.tt.clammy.xyz")
          NEXT_PUBLIC_FIREBASE_API_KEY=${{ vars.FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ vars.FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ vars.FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ vars.FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ vars.FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID=$([[ "$BRANCH_NAME" == "main" ]] && echo ${{ vars.FIREBASE_APP_ID_PROD }} || echo ${{ env.FIREBASE_APP_ID_PREVIEW }})
          BREVO_USER=${{ secrets.BREVO_USER }}
          BREVO_PASS=${{ secrets.BREVO_PASS }}

          REGISTRY=ghcr.io
          GITHUB_ACTOR=$GITHUB_ACTOR
          IMAGE_NAME=future-capsule

          COMPOSE_FILE=$([[ "$BRANCH_NAME" == "main" ]] && echo "docker-compose.production.yml" || echo "docker-compose.preview.yml")

          docker pull $REGISTRY/$GITHUB_ACTOR/$IMAGE_NAME:$BRANCH_NAME

          if [ "$(docker ps -q -f name=future-capsule-$BRANCH_NAME)" ]; then
            docker compose -f $HOME/future-capsule/$COMPOSE_FILE down
          fi

          DATABASE_URL=$DATABASE_URL \
          REDIS_URL=$REDIS_URL \
          AUTH_SECRET=$AUTH_SECRET \
          TZ=$TZ GITHUB_ID=$GH_ID \
          GOOGLE_ID=$GOOGLE_ID \
          GITLAB_ID=$GITLAB_ID \
          GITHUB_SECRET=$GH_SECRET \
          GOOGLE_SECRET=$GOOGLE_SECRET \
          GITLAB_SECRET=$GITLAB_SECRET \
          AUTH_URL=$AUTH_URL \
          NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL \
          NEXT_PUBLIC_FIREBASE_API_KEY=$NEXT_PUBLIC_FIREBASE_API_KEY \
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN \
          NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID \
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET \
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=$NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID \
          NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID \
          BREVO_USER=$BREVO_USER \
          BREVO_PASS=$BREVO_PASS \
          BRANCH_NAME=$BRANCH_NAME \
          docker compose -f $HOME/future-capsule/$COMPOSE_FILE up -d
