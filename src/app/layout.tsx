import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import './globals.css'
import { ColorSchemeScript } from '@mantine/core'
import Head from 'next/head'
import { createTheme, MantineProvider } from '@mantine/core'

import '@mantine/core/styles.css'
import '@mantine/dates/styles.css'
import { DatesProvider } from '@mantine/dates'
import { ContactsStoreProvider } from '@/store/contactsProvider'
import getUser from '@/lib/getUser'
import { prisma } from '@prisma-client'
import { redirect } from 'next/navigation'

import { ToastContainer } from 'react-toastify'

const theme = createTheme({
  /** Put your mantine theme override here */
})

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin']
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin']
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
}

export default async function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode
}>) {
  const user = await getUser()
  const userData = await prisma.user.findFirst({
    where: { id: user.id },
    select: {
      Contacts: {
        select: {
          id: true,
          name: true,
          userName: true
        }
      }
    }
  })
  if (!userData) return redirect('/auth/signin')

  return (
    <html lang='en'>
      <Head>
        <ColorSchemeScript />
      </Head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ContactsStoreProvider contacts={userData?.Contacts ?? []}>
          <MantineProvider theme={theme} defaultColorScheme='auto'>
            <DatesProvider settings={{ timezone: Intl.DateTimeFormat().resolvedOptions().timeZone }}>
              {children}
              <ToastContainer />
            </DatesProvider>
          </MantineProvider>
        </ContactsStoreProvider>
      </body>
    </html>
  )
}
